// insertion of singly linked list
#include "structNode.hpp"
int main(){
    Snode* head = new Snode({"head_node", NULL});
    Snode* temp = new Snode({"new_node", NULL});
    Snode* temp2 = new Snode({"third_node", NULL});
    Snode* temp3 = new Snode({"fourth_node", NULL});
    Snode* empty = NULL;
    cout << " insertion operation for a singly linked list:\n";
    cout << " insertion is done before the index/location\n";
    cout << " to insert after index/location use index value as index + 1\n";
    cout << " ==========================\n";
    cout << " temp: \n";
    Display(temp);
    cout << " ==========================\n";
    cout << " temp2: \n";
    Display(temp2);
    cout << " ==========================\n";
    cout << " temp3: \n";
    Display(temp3);
    cout << " ==========================\n";
    cout << " head: \n";
    Display(head);
    cout << " ==========================\n";
    cout << " empty: \n";
    Display(empty);
    cout << " after insertion 1 (inserting head on empty(empty node))\n";
    insertSnode(empty, head);
    cout << " ==========================\n";
    cout << " temp: \n";
    Display(temp);
    cout << " ==========================\n";
    cout << " temp2: \n";
    Display(temp2);
    cout << " ==========================\n";
    cout << " temp3: \n";
    Display(temp3);
    cout << " ==========================\n";
    cout << " head: \n";
    Display(head);
    cout << " ==========================\n";
    cout << " empty: \n";
    Display(empty);
    cout << " after insertion 2 (inserting temp on the tail of empty(list with single head/tail)\n";
    insertSnode(empty, temp, 1);
    cout << " ==========================\n";
    cout << " temp: \n";
    Display(temp);
    cout << " ==========================\n";
    cout << " temp2: \n";
    Display(temp2);
    cout << " ==========================\n";
    cout << " temp3: \n";
    Display(temp3);
    cout << " ==========================\n";
    cout << " head: \n";
    Display(head);
    cout << " ==========================\n";
    cout << " empty: \n";
    Display(empty);
    cout << " after insertion 3 (inserting temp2 on the tail of empty (list with two nodes)\n";
    insertSnode(empty, temp2, 2);
    cout << " ==========================\n";
    cout << " temp: \n";
    Display(temp);
    cout << " ==========================\n";
    cout << " temp2: \n";
    Display(temp2);
    cout << " ==========================\n";
    cout << " temp3: \n";
    Display(temp3);
    cout << " ==========================\n";
    cout << " head: \n";
    Display(head);
    cout << " ==========================\n";
    cout << " empty: \n";
    Display(empty);
    cout << " after insertion 4 (inserting temp3 on the 2th position of empty (list with three nodes)\n";
    insertSnode(empty, temp3, 2);
    cout << " ==========================\n";
    cout << " temp: \n";
    Display(temp);
    cout << " ==========================\n";
    cout << " temp2: \n";
    Display(temp2);
    cout << " ==========================\n";
    cout << " temp3: \n";
    Display(temp3);
    cout << " ==========================\n";
    cout << " head: \n";
    Display(head);
    cout << " ==========================\n";
    cout << " empty: \n";
    Display(empty);   
}